name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [linux]
        arch: [amd64, arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build Binary - ${{ matrix.os }} ${{ matrix.arch }}
        if: matrix.arch == 'amd64'
        run: |
          docker run --rm -t \
            -v ${{ github.workspace }}:${{ github.workspace }} \
            -w ${{ github.workspace }} \
            -e GOOS=${{ matrix.os }} \
            -e GOARCH=${{ matrix.arch }} \
            golang:1.17.8-buster make geth

      - name: Build Binary - ${{ matrix.os }} ${{ matrix.arch }}
        if: matrix.arch == 'arm64'
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker run --rm -t \
            -v ${{ github.workspace }}:${{ github.workspace }} \
            -w ${{ github.workspace }} \
            -e GOOS=${{ matrix.os }} \
            -e GOARCH=${{ matrix.arch }} \
            arm64v8/golang:1.17.8-buster make geth

      - name: Check version label
        if: matrix.arch == 'amd64'
        run: './build/bin/geth version | grep -q "Version: $(echo ${{ github.ref_name }} | cut -c 2-10)"'

      - name: Compress Binary
        run: zip -j geth-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.zip ./build/bin/geth

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.ref_name }}
          path: geth-${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}.zip
